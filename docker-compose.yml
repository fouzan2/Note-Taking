services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: note_taking_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-noteuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-notepassword}
      POSTGRES_DB: ${POSTGRES_DB:-note_taking_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-noteuser} -d ${POSTGRES_DB:-note_taking_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - note_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: note_taking_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - note_network

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: note_taking_app
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-noteuser}:${POSTGRES_PASSWORD:-notepassword}@postgres:5432/${POSTGRES_DB:-note_taking_db}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-for-development}
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - note_network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        alembic upgrade head &&
        echo 'Database migrated successfully!' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: note_taking_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - note_network

networks:
  note_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: 