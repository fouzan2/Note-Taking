apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: note-taking-api
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/launch-stage: GA
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/cloudsql-instances: ${PROJECT_ID}:${REGION}:note-taking-db
        run.googleapis.com/vpc-access-connector: projects/${PROJECT_ID}/locations/${REGION}/connectors/note-taking-connector
        run.googleapis.com/vpc-access-egress: all-traffic
        run.googleapis.com/startup-cpu-boost: 'true'
        autoscaling.knative.dev/minScale: '1'
        autoscaling.knative.dev/maxScale: '10'
    spec:
      serviceAccountName: ${SERVICE_ACCOUNT}
      containerConcurrency: 80
      timeoutSeconds: 300
      containers:
      - image: gcr.io/${PROJECT_ID}/note-taking-api:latest
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: '2'
            memory: 2Gi
          requests:
            cpu: '1'
            memory: 1Gi
        env:
        # Environment
        - name: ENVIRONMENT
          value: production
        - name: PORT
          value: '8080'
        
        # Database configuration using Cloud SQL
        - name: DATABASE_URL
          value: postgresql+asyncpg://noteuser:$(DB_PASSWORD)@/note_taking_db?host=/cloudsql/${PROJECT_ID}:${REGION}:note-taking-db
        
        # Redis configuration using private IP
        - name: REDIS_URL
          value: redis://$(REDIS_HOST):6379/0
        
        # Security secrets from Secret Manager
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: latest
              name: db-password
        
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: jwt-secret
        
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: api-key
        
        # Redis host (will be set during deployment)
        - name: REDIS_HOST
          value: ${REDIS_HOST}
        
        # Logging configuration
        - name: LOG_LEVEL
          value: INFO
        - name: GOOGLE_CLOUD_PROJECT
          value: ${PROJECT_ID}
        
        # CORS settings
        - name: CORS_ORIGINS
          value: '*'  # Update with your specific domains in production
        
        # Other configurations
        - name: DOCS_URL
          value: /docs
        - name: OPENAPI_URL
          value: /openapi.json
        
        # Health check path
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3 